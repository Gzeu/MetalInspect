name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Update version in build.gradle
      run: |
        sed -i "s/versionName .*/versionName \"${{ steps.version.outputs.version }}\"/g" app/build.gradle
        
        # Auto-increment version code based on tag
        VERSION_CODE=$(echo "${{ steps.version.outputs.version }}" | sed 's/\.//g')
        sed -i "s/versionCode .*/versionCode $VERSION_CODE/g" app/build.gradle
        
    - name: Run unit tests
      run: ./gradlew test --stacktrace --no-daemon
      
    - name: Generate test coverage report
      run: ./gradlew jacocoTestReport --no-daemon
      
    - name: Check coverage thresholds
      run: ./gradlew jacocoTestCoverageVerification --no-daemon
      
    - name: Run lint checks
      run: ./gradlew lintRelease --no-daemon
      
    - name: Build release APK
      run: ./gradlew assembleRelease --stacktrace --no-daemon
      env:
        KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        
    - name: Build release AAB
      run: ./gradlew bundleRelease --stacktrace --no-daemon
      env:
        KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        
    - name: Get APK info
      id: apk_info
      run: |
        APK_PATH="app/build/outputs/apk/release/app-release.apk"
        AAB_PATH="app/build/outputs/bundle/release/app-release.aab"
        
        if [ -f "$APK_PATH" ]; then
          APK_SIZE=$(stat -f%z "$APK_PATH" 2>/dev/null || stat -c%s "$APK_PATH")
          APK_SIZE_MB=$((APK_SIZE / 1024 / 1024))
          echo "apk_size=${APK_SIZE_MB}MB" >> $GITHUB_OUTPUT
        fi
        
        if [ -f "$AAB_PATH" ]; then
          AAB_SIZE=$(stat -f%z "$AAB_PATH" 2>/dev/null || stat -c%s "$AAB_PATH")
          AAB_SIZE_MB=$((AAB_SIZE / 1024 / 1024))
          echo "aab_size=${AAB_SIZE_MB}MB" >> $GITHUB_OUTPUT
        fi
        
    - name: Generate changelog
      id: changelog
      run: |
        if [ -f "CHANGELOG.md" ]; then
          # Extract changelog for this version
          CHANGELOG=$(sed -n "/## \[${{ steps.version.outputs.version }}\]/,/## \[/p" CHANGELOG.md | sed '$d')
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog=Release ${{ steps.version.outputs.version }}" >> $GITHUB_OUTPUT
        fi
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: MetalInspect ${{ steps.version.outputs.version }}
        body: |
          ## ðŸš€ MetalInspect ${{ steps.version.outputs.version }}
          
          ### ðŸ“¦ Downloads
          - **APK** (Direct install): `app-release.apk` (${{ steps.apk_info.outputs.apk_size }})
          - **AAB** (Google Play): `app-release.aab` (${{ steps.apk_info.outputs.aab_size }})
          
          ### ðŸ“± Compatibility
          - **Minimum Android**: 5.0 (API 21)
          - **Target Android**: 13 (API 33)
          - **Architecture**: ARM64, ARM32, x86_64
          
          ### ðŸ“‹ Changelog
          ${{ steps.changelog.outputs.changelog }}
          
          ### ðŸ”§ Installation
          ```bash
          # Download APK and install
          adb install app-release.apk
          ```
          
          ### âœ… Quality Metrics
          - Unit test coverage: 80%+
          - All lint checks passed
          - Instrumented tests verified
          - Security scan completed
          
        files: |
          app/build/outputs/apk/release/app-release.apk
          app/build/outputs/bundle/release/app-release.aab
          app/build/reports/lint-results-release.html
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload to App Center (Optional)
      if: secrets.APPCENTER_API_TOKEN
      uses: wzieba/AppCenter-Github-Action@v1.3.2
      with:
        appName: ${{ secrets.APPCENTER_APP_NAME }}
        token: ${{ secrets.APPCENTER_API_TOKEN }}
        group: Beta
        file: app/build/outputs/apk/release/app-release.apk
        notifyTesters: true
        debug: false